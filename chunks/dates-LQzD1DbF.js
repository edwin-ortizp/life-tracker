import{O as d,P as s,Q as y,R as i,h as m,j as w,q as l,w as v,u as M}from"./utils-vendor-zid8MmOQ.js";const P={lessThanXSeconds:{one:"menos de un segundo",other:"menos de {{count}} segundos"},xSeconds:{one:"1 segundo",other:"{{count}} segundos"},halfAMinute:"medio minuto",lessThanXMinutes:{one:"menos de un minuto",other:"menos de {{count}} minutos"},xMinutes:{one:"1 minuto",other:"{{count}} minutos"},aboutXHours:{one:"alrededor de 1 hora",other:"alrededor de {{count}} horas"},xHours:{one:"1 hora",other:"{{count}} horas"},xDays:{one:"1 día",other:"{{count}} días"},aboutXWeeks:{one:"alrededor de 1 semana",other:"alrededor de {{count}} semanas"},xWeeks:{one:"1 semana",other:"{{count}} semanas"},aboutXMonths:{one:"alrededor de 1 mes",other:"alrededor de {{count}} meses"},xMonths:{one:"1 mes",other:"{{count}} meses"},aboutXYears:{one:"alrededor de 1 año",other:"alrededor de {{count}} años"},xYears:{one:"1 año",other:"{{count}} años"},overXYears:{one:"más de 1 año",other:"más de {{count}} años"},almostXYears:{one:"casi 1 año",other:"casi {{count}} años"}},D=(e,t,n)=>{let a;const r=P[e];return typeof r=="string"?a=r:t===1?a=r.one:a=r.other.replace("{{count}}",t.toString()),n!=null&&n.addSuffix?n.comparison&&n.comparison>0?"en "+a:"hace "+a:a},j={full:"EEEE, d 'de' MMMM 'de' y",long:"d 'de' MMMM 'de' y",medium:"d MMM y",short:"dd/MM/y"},W={full:"HH:mm:ss zzzz",long:"HH:mm:ss z",medium:"HH:mm:ss",short:"HH:mm"},T={full:"{{date}} 'a las' {{time}}",long:"{{date}} 'a las' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},S={date:d({formats:j,defaultWidth:"full"}),time:d({formats:W,defaultWidth:"full"}),dateTime:d({formats:T,defaultWidth:"full"})},H={lastWeek:"'el' eeee 'pasado a la' p",yesterday:"'ayer a la' p",today:"'hoy a la' p",tomorrow:"'mañana a la' p",nextWeek:"eeee 'a la' p",other:"P"},x={lastWeek:"'el' eeee 'pasado a las' p",yesterday:"'ayer a las' p",today:"'hoy a las' p",tomorrow:"'mañana a las' p",nextWeek:"eeee 'a las' p",other:"P"},$=(e,t,n,a)=>t.getHours()!==1?x[e]:H[e],k={narrow:["AC","DC"],abbreviated:["AC","DC"],wide:["antes de cristo","después de cristo"]},z={narrow:["1","2","3","4"],abbreviated:["T1","T2","T3","T4"],wide:["1º trimestre","2º trimestre","3º trimestre","4º trimestre"]},E={narrow:["e","f","m","a","m","j","j","a","s","o","n","d"],abbreviated:["ene","feb","mar","abr","may","jun","jul","ago","sep","oct","nov","dic"],wide:["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"]},F={narrow:["d","l","m","m","j","v","s"],short:["do","lu","ma","mi","ju","vi","sá"],abbreviated:["dom","lun","mar","mié","jue","vie","sáb"],wide:["domingo","lunes","martes","miércoles","jueves","viernes","sábado"]},C={narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"},abbreviated:{am:"AM",pm:"PM",midnight:"medianoche",noon:"mediodia",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"},wide:{am:"a.m.",pm:"p.m.",midnight:"medianoche",noon:"mediodia",morning:"mañana",afternoon:"tarde",evening:"tarde",night:"noche"}},O={narrow:{am:"a",pm:"p",midnight:"mn",noon:"md",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"},abbreviated:{am:"AM",pm:"PM",midnight:"medianoche",noon:"mediodia",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"},wide:{am:"a.m.",pm:"p.m.",midnight:"medianoche",noon:"mediodia",morning:"de la mañana",afternoon:"de la tarde",evening:"de la tarde",night:"de la noche"}},L=(e,t)=>Number(e)+"º",N={ordinalNumber:L,era:s({values:k,defaultWidth:"wide"}),quarter:s({values:z,defaultWidth:"wide",argumentCallback:e=>Number(e)-1}),month:s({values:E,defaultWidth:"wide"}),day:s({values:F,defaultWidth:"wide"}),dayPeriod:s({values:C,defaultWidth:"wide",formattingValues:O,defaultFormattingWidth:"wide"})},V=/^(\d+)(º)?/i,X=/\d+/i,R={narrow:/^(ac|dc|a|d)/i,abbreviated:/^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,wide:/^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i},A={any:[/^ac/i,/^dc/i],wide:[/^(antes de cristo|antes de la era com[uú]n)/i,/^(despu[eé]s de cristo|era com[uú]n)/i]},Y={narrow:/^[1234]/i,abbreviated:/^T[1234]/i,wide:/^[1234](º)? trimestre/i},q={any:[/1/i,/2/i,/3/i,/4/i]},I={narrow:/^[efmajsond]/i,abbreviated:/^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,wide:/^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i},_={narrow:[/^e/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^en/i,/^feb/i,/^mar/i,/^abr/i,/^may/i,/^jun/i,/^jul/i,/^ago/i,/^sep/i,/^oct/i,/^nov/i,/^dic/i]},Q={narrow:/^[dlmjvs]/i,short:/^(do|lu|ma|mi|ju|vi|s[áa])/i,abbreviated:/^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,wide:/^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i},U={narrow:[/^d/i,/^l/i,/^m/i,/^m/i,/^j/i,/^v/i,/^s/i],any:[/^do/i,/^lu/i,/^ma/i,/^mi/i,/^ju/i,/^vi/i,/^sa/i]},B={narrow:/^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,any:/^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i},G={any:{am:/^a/i,pm:/^p/i,midnight:/^mn/i,noon:/^md/i,morning:/mañana/i,afternoon:/tarde/i,evening:/tarde/i,night:/noche/i}},J={ordinalNumber:y({matchPattern:V,parsePattern:X,valueCallback:function(e){return parseInt(e,10)}}),era:i({matchPatterns:R,defaultMatchWidth:"wide",parsePatterns:A,defaultParseWidth:"any"}),quarter:i({matchPatterns:Y,defaultMatchWidth:"wide",parsePatterns:q,defaultParseWidth:"any",valueCallback:e=>e+1}),month:i({matchPatterns:I,defaultMatchWidth:"wide",parsePatterns:_,defaultParseWidth:"any"}),day:i({matchPatterns:Q,defaultMatchWidth:"wide",parsePatterns:U,defaultParseWidth:"any"}),dayPeriod:i({matchPatterns:B,defaultMatchWidth:"any",parsePatterns:G,defaultParseWidth:"any"})},c={code:"es",formatDistance:D,formatLong:S,formatRelative:$,localize:N,match:J,options:{weekStartsOn:1,firstWeekContainsDate:1}},ee=(e=new Date)=>{const t=new Date(e.getTime());return t.setHours(0,0,0,0),t.toISOString().split("T")[0]},ae=e=>{const t=new Date(e);return t.setHours(12,0,0,0),t},K=e=>{const t=["enero","febrero","marzo","abril","mayo","junio","julio","agosto","septiembre","octubre","noviembre","diciembre"],n=e.getDate(),a=t[e.getMonth()],r=e.getFullYear();let o=e.getHours();const h=e.getMinutes().toString().padStart(2,"0"),f=e.getSeconds().toString().padStart(2,"0"),g=o>=12?"p.m.":"a.m.";o=o%12,o=o||12;const u=-e.getTimezoneOffset(),b=Math.abs(Math.floor(u/60)),p=u>=0?"+":"-";return`${n} de ${a} de ${r}, ${o}:${h}:${f} ${g} UTC${p}${b}`},te=(e,t,n)=>{const a=new Date(e);return a.setHours(t,n,0,0),{timestamp:a.getTime(),utcOffset:-a.getTimezoneOffset(),formatted:K(a)}},ne=(e=new Date,t="daily",n=1)=>{const a=w(e);switch(t){case"daily":return l(a,1);case"weekly":return M(a,1);case"monthly":return v(a,1);case"custom":return l(a,n);default:return a}},oe=(e,t,n)=>{const a=m(e,"'próximo' EEEE",{locale:c});switch(t){case"daily":return`Diariamente (${a})`;case"weekly":return`Semanalmente (${a})`;case"monthly":return`Mensualmente (${m(e,"'próximo' d 'de' MMMM",{locale:c})})`;case"custom":return`Cada ${n} día${n!==1?"s":""} (${a})`;default:return""}},re=e=>{const t=e.getTimezoneOffset();return new Date(e.getTime()-t*60*1e3).toISOString().split("T")[0]},se=e=>m(e,"EEEE, d 'de' MMMM 'de' yyyy",{locale:c}),ie=e=>Array.from({length:12},(t,n)=>({name:new Date(e,n).toLocaleString("es",{month:"short"}),days:new Date(e,n+1,0).getDate(),number:n+1}));export{K as a,oe as b,te as c,se as d,c as e,re as f,ee as g,ne as h,ie as i,ae as t};
