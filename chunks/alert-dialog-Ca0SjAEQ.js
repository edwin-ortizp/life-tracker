import{j as l,c as L,a as k,p as D,o as G,O as B,u as v,W as Y,i as q,d as Z,T as J,l as K,k as y,n as Q,m as U}from"./ui-vendor-DGxrBG5B.js";import{r as s}from"./react-vendor-B6CgFIIW.js";import{c as d,g as x}from"../assets/index-B6EFx1d9.js";var X=s.forwardRef((e,t)=>{const{children:a,...o}=e,r=s.Children.toArray(a),n=r.find(ee);if(n){const i=n.props.children,p=r.map(f=>f===n?s.Children.count(i)>1?s.Children.only(null):s.isValidElement(i)?i.props.children:null:f);return l.jsx(m,{...o,ref:t,children:s.isValidElement(i)?s.cloneElement(i,void 0,p):null})}return l.jsx(m,{...o,ref:t,children:a})});X.displayName="Slot";var m=s.forwardRef((e,t)=>{const{children:a,...o}=e;if(s.isValidElement(a)){const r=ae(a);return s.cloneElement(a,{...te(o,a.props),ref:t?L(t,r):r})}return s.Children.count(a)>1?s.Children.only(null):null});m.displayName="SlotClone";var N=({children:e})=>l.jsx(l.Fragment,{children:e});function ee(e){return s.isValidElement(e)&&e.type===N}function te(e,t){const a={...t};for(const o in t){const r=e[o],n=t[o];/^on[A-Z]/.test(o)?r&&n?a[o]=(...p)=>{n(...p),r(...p)}:r&&(a[o]=r):o==="style"?a[o]={...r,...n}:o==="className"&&(a[o]=[r,n].filter(Boolean).join(" "))}return{...e,...a}}function ae(e){var o,r;let t=(o=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:o.get,a=t&&"isReactWarning"in t&&t.isReactWarning;return a?e.ref:(t=(r=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:r.get,a=t&&"isReactWarning"in t&&t.isReactWarning,a?e.props.ref:e.props.ref||e.ref)}var R="AlertDialog",[oe,Ee]=k(R,[D]),c=D(),h=e=>{const{__scopeAlertDialog:t,...a}=e,o=c(t);return l.jsx(Q,{...o,...a,modal:!0})};h.displayName=R;var re="AlertDialogTrigger",j=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(G,{...r,...o,ref:t})});j.displayName=re;var se="AlertDialogPortal",E=e=>{const{__scopeAlertDialog:t,...a}=e,o=c(t);return l.jsx(U,{...o,...a})};E.displayName=se;var le="AlertDialogOverlay",C=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(B,{...r,...o,ref:t})});C.displayName=le;var g="AlertDialogContent",[ne,ie]=oe(g),_=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,children:o,...r}=e,n=c(a),i=s.useRef(null),p=v(t,i),f=s.useRef(null);return l.jsx(Y,{contentName:g,titleName:w,docsSlug:"alert-dialog",children:l.jsx(ne,{scope:a,cancelRef:f,children:l.jsxs(q,{role:"alertdialog",...n,...r,ref:p,onOpenAutoFocus:Z(r.onOpenAutoFocus,u=>{var A;u.preventDefault(),(A=f.current)==null||A.focus({preventScroll:!0})}),onPointerDownOutside:u=>u.preventDefault(),onInteractOutside:u=>u.preventDefault(),children:[l.jsx(N,{children:o}),l.jsx(de,{contentRef:i})]})})})});_.displayName=g;var w="AlertDialogTitle",b=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(J,{...r,...o,ref:t})});b.displayName=w;var P="AlertDialogDescription",S=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(K,{...r,...o,ref:t})});S.displayName=P;var ce="AlertDialogAction",O=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,r=c(a);return l.jsx(y,{...r,...o,ref:t})});O.displayName=ce;var T="AlertDialogCancel",$=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...o}=e,{cancelRef:r}=ie(T,a),n=c(a),i=v(t,r);return l.jsx(y,{...n,...o,ref:i})});$.displayName=T;var de=({contentRef:e})=>{const t=`\`${g}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${g}\` by passing a \`${P}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${g}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var o;document.getElementById((o=e.current)==null?void 0:o.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},pe=h,ge=j,fe=E,M=C,I=_,V=O,W=$,F=b,H=S;const Ce=pe,_e=ge,ue=fe,z=s.forwardRef(({className:e,...t},a)=>l.jsx(M,{className:d("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:a}));z.displayName=M.displayName;const me=s.forwardRef(({className:e,...t},a)=>l.jsxs(ue,{children:[l.jsx(z,{}),l.jsx(I,{ref:a,className:d("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...t})]}));me.displayName=I.displayName;const Ae=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col space-y-2 text-center sm:text-left",e),...t});Ae.displayName="AlertDialogHeader";const De=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});De.displayName="AlertDialogFooter";const ve=s.forwardRef(({className:e,...t},a)=>l.jsx(F,{ref:a,className:d("text-lg font-semibold",e),...t}));ve.displayName=F.displayName;const ye=s.forwardRef(({className:e,...t},a)=>l.jsx(H,{ref:a,className:d("text-sm text-muted-foreground",e),...t}));ye.displayName=H.displayName;const xe=s.forwardRef(({className:e,...t},a)=>l.jsx(V,{ref:a,className:d(x(),e),...t}));xe.displayName=V.displayName;const Ne=s.forwardRef(({className:e,...t},a)=>l.jsx(W,{ref:a,className:d(x({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));Ne.displayName=W.displayName;export{Ce as A,me as a,Ae as b,ve as c,ye as d,De as e,Ne as f,xe as g,_e as h};
